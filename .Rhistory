colnames(sumSteps_each_day) <- c("date", "sumOfSteps")
hist(sumSteps_each_day$sumOfSteps, xlab = "sum of steps", main = "Histogram of steps each day", breaks = 20, col = "red")
mean(sumSteps_each_day$sumOfSteps)
median(sumSteps_each_day$sumOfSteps)
sumSteps_each_day
View(data)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
## load the required library
library(dplyr)
library(lubridate)
unzip(zipfile = "activity.zip")
data <- read.csv(file = "activity.csv", header = TRUE)
data <- tbl_df(data)
```
## What is mean total number of steps taken per day?
```{r}
grop_by_date <- group_by(data, date)
sumSteps_each_day <- summarize(grop_by_date, sum(steps, na.rm = TRUE))
colnames(sumSteps_each_day) <- c("date", "sumOfSteps")
hist(sumSteps_each_day$sumOfSteps, xlab = "sum of steps", main = "Histogram of steps each day", breaks = 20, col = "red")
mean(sumSteps_each_day$sumOfSteps, na.rm = TRUE)
median(sumSteps_each_day$sumOfSteps, na.rm = TRUE)
# meanSteps_each_day <- summarize(grop_by_date, mean(steps, na.rm = TRUE))
# colnames(meanSteps_each_day) <- c("date", "meanOfSteps")
# meanSteps_each_day
```
## What is the average daily activity pattern?
```{r}
group_by_interval <- group_by(data, interval)
meanSteps_each_interval <- summarize(group_by_interval, mean(steps, na.rm = TRUE))
colnames(meanSteps_each_interval) <- c("interval", "averageSteps")
plot(meanSteps_each_interval$interval, meanSteps_each_interval$averageSteps, type = "l",
main = "Time series steps", xlab = "interval", ylab = "steps")
```
## Imputing missing values
```{r}
## 1.calculate and report the total number of missing values in the data set
missing_value_data <- data[is.na(data$steps),]
nrow(missing_value_data)
## 2.fill the NA values with average step in that interval
data[is.na(data$steps), 1] <- meanSteps_each_interval[meanSteps_each_interval$interval == data[is.na(data$steps), 3], 2]
## 3.create a new data with the missing values filled in
new_data <- data
## 4.
grop_by_date <- group_by(new_data, date)
sumSteps_each_day <- summarize(grop_by_date, sum(steps))
colnames(sumSteps_each_day) <- c("date", "sumOfSteps")
hist(sumSteps_each_day$sumOfSteps, xlab = "sum of steps", main = "Histogram of steps each day", breaks = 20, col = "red")
mean(sumSteps_each_day$sumOfSteps)
median(sumSteps_each_day$sumOfSteps)
```
## Are there differences in activity patterns between weekdays and weekends?
View(data)
nrow(data[is.na(data$steps),])
View(data)
data <- read.csv(file = "activity.csv", header = TRUE)
data <- tbl_df(data)
nrow(data[is.na(data$steps),])
meanSteps_each_interval
m <- as.frame(meanSteps_each_interval)
m <- as.data.frame(meanSteps_each_interval)
m
data[is.na(data$steps), 1]
meanSteps_each_interval[meanSteps_each_interval$interval == data[is.na(data$steps), 3], 2]
c <- data.frame(meanSteps_each_interval[meanSteps_each_interval$interval == data[is.na(data$steps), 3], 2])
c
data[is.na(data$steps), 3]
meanSteps_each_interval$interval == data[is.na(data$steps), 3]
View(c)
m <- meanSteps_each_interval
View(m)
r <- meanSteps_each_interval$interval == data[is.na(data$steps), 3]
View(r)
r <- data[is.na(data$steps) == meanSteps_each_interval$interval , 3]
View(r)
lapply(data[is.na(data$steps)], function(x) {x[, 1] <- meanSteps_each_interval[ meanSteps_each_interval$interval == x[, 3], 2})
lapply(data[is.na(data$steps)], function(x) {x[, 1] <- meanSteps_each_interval[ meanSteps_each_interval$interval == x[, 3], 2]})
lapply(data[is.na(data$steps), ], function(x) {x[, 1] <- meanSteps_each_interval[ meanSteps_each_interval$interval == x[, 3], 2]})
lapply(data[is.na(data$steps), ], function(x) {x[1, 1] <- meanSteps_each_interval[ meanSteps_each_interval$interval == x[1, 3], 2]})
View(meanSteps_each_interval)
View(data)
lapply(data[is.na(data$steps), ], function(x) {x[1, 1] <- meanSteps_each_interval[ meanSteps_each_interval$interval == x[1, 3], 2]})
lapply(data[is.na(data$steps), ], FUN = function(x) {x[1, 1] <- meanSteps_each_interval[ meanSteps_each_interval$interval == x[1, 3], 2]})
sumset(meanSteps_each_interval, identical(all.equal(interval , max(interval), TRUE)))
subset(meanSteps_each_interval, identical(all.equal(interval , max(interval), TRUE)))
subset(meanSteps_each_interval, interval == max(interval))
max(meanSteps_each_interval$interval)
max(meanSteps_each_interval$averageSteps)
subset(meanSteps_each_interval, averageSteps == max(averagrSteps))
subset(meanSteps_each_interval, averageSteps == max(averageSteps))
max_row <- subset(meanSteps_each_interval, averageSteps == max(averageSteps))
max_row[1, 1]
data[is.na(data$steps), 1] <- meanSteps_each_interval[data[is.na(data$steps), 3] == meanSteps_each_interval$interval , 2]
nrow(data[is.na(data$steps)], )
nrow(data[is.na(data$steps), ] )
data[is.na(data$steps), 1] <- meanSteps_each_interval[meanSteps_each_interval$interval == data[is.na(data$steps), 3], 2]
nrow(data[is.na(data$steps), ] )
x = 1:5
x = 3
x <- 1:5
x == 3
y = 1:2
x == y
x = 1:5
is.na(data$steps)
data[is.na(data$steps), 1]
x <- 1:5
y <- 2
2 %in% x
row(x)
data[is.na(data$steps), 1]
data[is.na(data$steps),]
for i in nrow(data[is.na(data$steps), ]){
data[i, 1] <- meanSteps_each_interval[
meanSteps_each_interval$interval == data[i, 3], 2]
}
nrow(data[is.na(data$steps), ])
for i in 1:nrow(data[is.na(data$steps), ]){
data[i, 1] <- meanSteps_each_interval[
meanSteps_each_interval$interval == data[i, 3], 2]
}
for (i in 1:nrow(data[is.na(data$steps), ]) ){
data[i, 1] <- meanSteps_each_interval[
meanSteps_each_interval$interval == data[i, 3], 2]
}
i
nrow(data[is.na(data$steps), ])
for (i in 1:nrow(data[is.na(data$steps), ]) ){
data[i, 1] <- meanSteps_each_interval[
meanSteps_each_interval$interval == data[i, 3], 2]
}
data[i,3]
for (i in 1:nrow(data[is.na(data$steps), ]) ){
data[i, 1] <- meanSteps_each_interval[meanSteps_each_interval$interval == data[i, 3], 2]
}
fo( i in 1:5) print 2
fo( i in 1:5) print (2)
for( i in 1:5) print (2)
for( i in 1:5) print (i)
meanSteps_each_interval[meanSteps_each_interval$interval == data[i, 3], 2]
data[i,3]
meanSteps_each_interval[20,2]
meanSteps_each_interval[meanSteps_each_interval$interval == data[i, 3], 2]
subset(meanSteps_each_interval, interval == data[i,3])
data[is.na(data$steps), 1] <- meanSteps_each_interval[meanSteps_each_interval$interval == data[is.na(data$steps), 3], 2]
install.packages("RMySQL")
17568/288
nrow(data)
mutate(data, averageSteps = rep(meanSteps_each_interval$averageSteps, 61) )
View(c)
View(data)
data <- read.csv(file = "activity.csv", header = TRUE)
data <- tbl_df(data)
mutate(data, averageSteps = rep(meanSteps_each_interval$averageSteps, 61) )
View(data)
data <- read.csv(file = "activity.csv", header = TRUE)
data <- tbl_df(data)
View(data)
grop_by_date <- group_by(data, date)
sumSteps_each_day <- summarize(grop_by_date, sum(steps, na.rm = TRUE))
colnames(sumSteps_each_day) <- c("date", "sumOfSteps")
hist(sumSteps_each_day$sumOfSteps, xlab = "sum of steps", main = "Histogram of steps each day", breaks = 20, col = "red")
mean(sumSteps_each_day$sumOfSteps, na.rm = TRUE)
median(sumSteps_each_day$sumOfSteps, na.rm = TRUE)
group_by_interval <- group_by(data, interval)
meanSteps_each_interval <- summarize(group_by_interval, mean(steps, na.rm = TRUE))
colnames(meanSteps_each_interval) <- c("interval", "averageSteps")
plot(meanSteps_each_interval$interval, meanSteps_each_interval$averageSteps, type = "l",
main = "Time series steps", xlab = "interval", ylab = "steps")
max_row <- subset(meanSteps_each_interval, averageSteps == max(averageSteps))
max_row[1, 1]
data <- read.csv(file = "activity.csv", header = TRUE)
data <- tbl_df(data)
mutate(data, averageSteps = rep(meanSteps_each_interval$averageSteps, 61) )
View(data)
data <- mutate(data, averageSteps = rep(meanSteps_each_interval$averageSteps, 61) )
View(data)
data[17586, 4]
nrow(meanSteps_each_interval)
nrow(data)
17586/288.0
data[17586,]
data[17568,]
data <- read.csv(file = "activity.csv", header = TRUE)
data <- tbl_df(data)
data[nrow(data),]
data <- mutate(data, averageSteps = meanSteps_each_interval)
data <- mutate(data, averageSteps = meanSteps_each_interval$averageSteps)
data <- mutate(data, averageSteps = rep(meanSteps_each_interval$averageSteps, 61) )
data[is.na(data$steps), 1] <- data[is.na(data$steps), 3]
View(data)
data <- mutate(data, averageSteps = rep(meanSteps_each_interva l$averageSteps, (nrow(data) /nrow(meanSteps_each_interval)) )
data <- mutate(data, averageSteps = rep(meanSteps_each_interval$averageSteps, (nrow(data) /nrow(meanSteps_each_interval)) )
data <- mutate(data, averageSteps = rep(meanSteps_each_interval$averageSteps, (nrow(data) /nrow(meanSteps_each_interval)) ))
View(data)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
## load the required library
library(dplyr)
library(lubridate)
unzip(zipfile = "activity.zip")
data <- read.csv(file = "activity.csv", header = TRUE)
data <- tbl_df(data)
```
## What is mean total number of steps taken per day?
```{r}
grop_by_date <- group_by(data, date)
sumSteps_each_day <- summarize(grop_by_date, sum(steps, na.rm = TRUE))
colnames(sumSteps_each_day) <- c("date", "sumOfSteps")
hist(sumSteps_each_day$sumOfSteps, xlab = "sum of steps", main = "Histogram of steps each day", breaks = 20, col = "red")
mean(sumSteps_each_day$sumOfSteps, na.rm = TRUE)
median(sumSteps_each_day$sumOfSteps, na.rm = TRUE)
# meanSteps_each_day <- summarize(grop_by_date, mean(steps, na.rm = TRUE))
# colnames(meanSteps_each_day) <- c("date", "meanOfSteps")
# meanSteps_each_day
```
## What is the average daily activity pattern?
```{r}
group_by_interval <- group_by(data, interval)
meanSteps_each_interval <- summarize(group_by_interval, mean(steps, na.rm = TRUE))
colnames(meanSteps_each_interval) <- c("interval", "averageSteps")
plot(meanSteps_each_interval$interval, meanSteps_each_interval$averageSteps, type = "l",
main = "Time series steps", xlab = "interval", ylab = "steps")
max_row <- subset(meanSteps_each_interval, averageSteps == max(averageSteps))
max_row[1, 1]
```
## Imputing missing values
```{r}
## 1.calculate and report the total number of missing values in the data set
missing_value_data <- data[is.na(data$steps),]
nrow(missing_value_data)
## 2.fill the NA values with average step in that interval
data <- mutate(data, averageSteps = rep(meanSteps_each_interval$averageSteps, (nrow(data) /nrow(meanSteps_each_interval)) ))
data[is.na(data$steps), 1] <- data[is.na(data$steps), 4]
## 3.create a new data with the missing values filled in
new_data <- data
## 4.
grop_by_date <- group_by(new_data, date)
sumSteps_each_day <- summarize(grop_by_date, sum(steps))
colnames(sumSteps_each_day) <- c("date", "sumOfSteps")
hist(sumSteps_each_day$sumOfSteps, xlab = "sum of steps", main = "Histogram of steps each day", breaks = 20, col = "red")
mean(sumSteps_each_day$sumOfSteps)
median(sumSteps_each_day$sumOfSteps)
View(data)
new_data <- select(data, date:averageSteps)
View(new_data)
new_data <- select(data, steps:interval)
View(new_data)
class(new_data$date)
new_data$date <- ymd(new_data$date)
class(new_data$date)
weekdays(new_data[1, 2])
class(new_data[1,2])
class(new_data[[1]][[2]])
w <- weekdays(new_data$date)
w
new_data <- mutate(new_data, weekdays = weekdays(new_data$date))
View(new_data)
class(new_data$weekdays)
x <- ymd("2012-03-26")
week(x)
weekend <- c("Saturday", "Sunday")
is.element(new_data$weekdays, weekend)
mutate(new_data, k = is.element(new_data$weekdays, weekend))
m <- mutate(new_data, k = is.element(new_data$weekdays, weekend))
n <- factor(x = m$k, lables = c("weekday", "weekend"))
n <- factor(x = m$k, labels = c("weekday", "weekend"))
n
new_data <- mutate(new_data, isWeekend = is.element(new_data$weekdays, weekend))
View(new_data)
new_data <- mutate(new_data, weekdays = factor(new_data$isWeekend, labels = c("weekdays", "weekend")))
View(new_data)
new_data <- mutate(new_data, weekdays = factor(new_data$isWeekend, labels = c("weekday", "weekend")))
new_data <- select(new_data, steps:weekdays)
View(new_data)
week_data <- subset(new_data, weekdays = "weekday")
View(week_data)
weekday_data <- subset(new_data, weekdays == "weekday")
weekend_data <- subset(new_data, weekdays == "weekend")
View(weekday_data)
weekday_group_by_interval <- group_by(weekday_data, interval)
weekday_group_by_interval
weekday_meansteps_eachinterval <- summarise(weekday_group_by_interval, mean(steps))
View(weekday_meansteps_eachinterval)
weekend_group_by_interval <- group_by(weekend_data, interval)
weekend_meansteps_eachinterval <- summarise(weekend_group_by_interval, mean(steps))
View(weekend_meansteps_eachinterval)
class(weekend_meansteps_eachinterval$mean(steps))
class(weekend_meansteps_eachinterval)
class(weekend_meansteps_eachinterval$interval)
class(weekend_meansteps_eachinterval$mean(steps))
weekday_data <- subset(new_data, weekdays == "weekday")
weekday_group_by_interval <- group_by(weekday_data, interval)
weekday_meansteps_eachinterval <- summarise(weekday_group_by_interval, mean(steps))
colnames(weekday_meansteps_eachinterval) <- c("interval", "meanSteps")
weekend_data <- subset(new_data, weekdays == "weekend")
weekend_group_by_interval <- group_by(weekend_data, interval)
weekend_meansteps_eachinterval <- summarise(weekend_group_by_interval, mean(steps))
colnames(weekend_meansteps_eachinterval) <- c("interval", "meanSteps")
View(weekday_meansteps_eachinterval)
View(weekend_meansteps_eachinterval)
example(panel.smooth)
library(lattice)
xyplot(meanSteps ~ interval | weekdays, data = new_data, layout = c(1, 2),
type = "l", ylab = "Number of steps")
xyplot(steps ~ interval | weekdays, data = new_data, layout = c(1, 2),
type = "l", ylab = "Number of steps")
weekend_meansteps_eachinterval < mutate(weekend_meansteps_eachinterval, weekdays = rep("weekdays", nrow(weekend_meansteps_eachinterval)))
weekend_meansteps_eachinterval <- mutate(weekend_meansteps_eachinterval, weekdays = rep("weekend", nrow(weekend_meansteps_eachinterval)))
View(weekend_meansteps_eachinterval)
weekday_meansteps_eachinterval <- mutate(weekday_meansteps_eachinterval, weekdays = rep("weekday", nrow(weekday_meansteps_eachinterval)))
df_final <- rbind(weekday_meansteps_eachinterval, weekend_meansteps_eachinterval)
xyplot(steps ~ interval | weekdays, data = new_data, layout = c(1, 2),
type = "l", ylab = "Number of steps")
View(weekend_meansteps_eachinterval)
xyplot(meanSteps ~ interval | weekdays, data = df_final, layout = c(1, 2),
type = "l", ylab = "Number of steps")
weekend <- c("Saturday", "Sunday")
new_data <- mutate(new_data, isWeekend = is.element(new_data$weekdays, weekend))
new_data <- mutate(new_data, weekdays = factor(new_data$isWeekend, labels = c("weekday", "weekend")))
new_data <- select(new_data, steps:weekdays)
weekday_data <- subset(new_data, weekdays == "weekday")
weekday_group_by_interval <- group_by(weekday_data, interval)
weekday_meansteps_eachinterval <- summarise(weekday_group_by_interval, mean(steps))
colnames(weekday_meansteps_eachinterval) <- c("interval", "meanSteps")
weekday_meansteps_eachinterval <- mutate(weekday_meansteps_eachinterval, weekdays = rep("weekday", nrow(weekday_meansteps_eachinterval)))
weekend_data <- subset(new_data, weekdays == "weekend")
weekend_group_by_interval <- group_by(weekend_data, interval)
weekend_meansteps_eachinterval <- summarise(weekend_group_by_interval, mean(steps))
weekend_meansteps_eachinterval <- mutate(weekend_meansteps_eachinterval, weekdays = rep("weekend", nrow(weekend_meansteps_eachinterval)))
colnames(weekend_meansteps_eachinterval) <- c("interval", "meanSteps")
new_data <- mutate(new_data, weekdays = factor(new_data$isWeekend, labels = c("weekday", "weekend")))
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
## load the required library
library(dplyr)
library(lubridate)
unzip(zipfile = "activity.zip")
data <- read.csv(file = "activity.csv", header = TRUE)
data <- tbl_df(data)
```
## What is mean total number of steps taken per day?
```{r}
grop_by_date <- group_by(data, date)
sumSteps_each_day <- summarize(grop_by_date, sum(steps, na.rm = TRUE))
colnames(sumSteps_each_day) <- c("date", "sumOfSteps")
hist(sumSteps_each_day$sumOfSteps, xlab = "sum of steps", main = "Histogram of steps each day", breaks = 20, col = "red")
mean(sumSteps_each_day$sumOfSteps, na.rm = TRUE)
median(sumSteps_each_day$sumOfSteps, na.rm = TRUE)
# meanSteps_each_day <- summarize(grop_by_date, mean(steps, na.rm = TRUE))
# colnames(meanSteps_each_day) <- c("date", "meanOfSteps")
# meanSteps_each_day
```
## What is the average daily activity pattern?
```{r}
group_by_interval <- group_by(data, interval)
meanSteps_each_interval <- summarize(group_by_interval, mean(steps, na.rm = TRUE))
colnames(meanSteps_each_interval) <- c("interval", "averageSteps")
plot(meanSteps_each_interval$interval, meanSteps_each_interval$averageSteps, type = "l",
main = "Time series steps", xlab = "interval", ylab = "steps")
max_row <- subset(meanSteps_each_interval, averageSteps == max(averageSteps))
max_row[1, 1]
```
## Imputing missing values
```{r}
## 1.calculate and report the total number of missing values in the data set
missing_value_data <- data[is.na(data$steps),]
nrow(missing_value_data)
## 2.fill the NA values with average step in that interval
data <- mutate(data, averageSteps = rep(meanSteps_each_interval$averageSteps, (nrow(data) /nrow(meanSteps_each_interval)) ))
data[is.na(data$steps), 1] <- data[is.na(data$steps), 4]
## 3.create a new data with the missing values filled in
new_data <- select(data, steps:interval)
## 4.
grop_by_date <- group_by(new_data, date)
sumSteps_each_day <- summarize(grop_by_date, sum(steps))
colnames(sumSteps_each_day) <- c("date", "sumOfSteps")
hist(sumSteps_each_day$sumOfSteps, xlab = "sum of steps", main = "Histogram of steps each day", breaks = 20, col = "red")
mean(sumSteps_each_day$sumOfSteps)
median(sumSteps_each_day$sumOfSteps)
```
**From the resut, compared with the previous one, the gross level improved. Data are centered more around the mean value**
## Are there differences in activity patterns between weekdays and weekends?
```{r}
weekend <- c("Saturday", "Sunday")
new_data <- mutate(new_data, isWeekend = is.element(new_data$weekdays, weekend))
new_data <- mutate(new_data, weekdays = as.factor(new_data$isWeekend, labels = c("weekday", "weekend")))
new_data <- select(new_data, steps:weekdays)
weekday_data <- subset(new_data, weekdays == "weekday")
weekday_group_by_interval <- group_by(weekday_data, interval)
weekday_meansteps_eachinterval <- summarise(weekday_group_by_interval, mean(steps))
colnames(weekday_meansteps_eachinterval) <- c("interval", "meanSteps")
weekday_meansteps_eachinterval <- mutate(weekday_meansteps_eachinterval, weekdays = rep("weekday", nrow(weekday_meansteps_eachinterval)))
weekend_data <- subset(new_data, weekdays == "weekend")
weekend_group_by_interval <- group_by(weekend_data, interval)
weekend_meansteps_eachinterval <- summarise(weekend_group_by_interval, mean(steps))
weekend_meansteps_eachinterval <- mutate(weekend_meansteps_eachinterval, weekdays = rep("weekend", nrow(weekend_meansteps_eachinterval)))
colnames(weekend_meansteps_eachinterval) <- c("interval", "meanSteps")
library(lattice)
# df_weekday <- data.frame(interval = unique(activity2_weekday$interval), avg = as.numeric(mean_activity2_weekday), day = rep("weekday", length(mean_activity2_weekday)))
# df_weekend <- data.frame(interval = unique(activity2_weekend$interval), avg = as.numeric(mean_activity2_weekend), day = rep("weekend", length(mean_activity2_weekend)))
df_final <- rbind(weekday_meansteps_eachinterval, weekend_meansteps_eachinterval)
xyplot(meanSteps ~ interval | weekdays, data = df_final, layout = c(1, 2),
type = "l", ylab = "Number of steps")
library(dplyr)
library(lubridate)
unzip(zipfile = "activity.zip")
data <- read.csv(file = "activity.csv", header = TRUE)
data <- tbl_df(data)
grop_by_date <- group_by(data, date)
sumSteps_each_day <- summarize(grop_by_date, sum(steps, na.rm = TRUE))
colnames(sumSteps_each_day) <- c("date", "sumOfSteps")
hist(sumSteps_each_day$sumOfSteps, xlab = "sum of steps", main = "Histogram of steps each day", breaks = 20, col = "red")
mean(sumSteps_each_day$sumOfSteps, na.rm = TRUE)
median(sumSteps_each_day$sumOfSteps, na.rm = TRUE)
group_by_interval <- group_by(data, interval)
meanSteps_each_interval <- summarize(group_by_interval, mean(steps, na.rm = TRUE))
colnames(meanSteps_each_interval) <- c("interval", "averageSteps")
plot(meanSteps_each_interval$interval, meanSteps_each_interval$averageSteps, type = "l",
main = "Time series steps", xlab = "interval", ylab = "steps")
max_row <- subset(meanSteps_each_interval, averageSteps == max(averageSteps))
max_row[1, 1]
## 1.calculate and report the total number of missing values in the data set
missing_value_data <- data[is.na(data$steps),]
nrow(missing_value_data)
## 2.fill the NA values with average step in that interval
data <- mutate(data, averageSteps = rep(meanSteps_each_interval$averageSteps, (nrow(data) /nrow(meanSteps_each_interval)) ))
data[is.na(data$steps), 1] <- data[is.na(data$steps), 4]
## 3.create a new data with the missing values filled in
new_data <- select(data, steps:interval)
## 4.
grop_by_date <- group_by(new_data, date)
sumSteps_each_day <- summarize(grop_by_date, sum(steps))
colnames(sumSteps_each_day) <- c("date", "sumOfSteps")
hist(sumSteps_each_day$sumOfSteps, xlab = "sum of steps", main = "Histogram of steps each day", breaks = 20, col = "red")
mean(sumSteps_each_day$sumOfSteps)
median(sumSteps_each_day$sumOfSteps)
weekend <- c("Saturday", "Sunday")
new_data <- mutate(new_data, isWeekend = is.element(new_data$weekdays, weekend))
View(new_data)
View(data)
new_data$date <- ymd(new_data$date)
new_data <- mutate(new_data, weekdays = weekdays(new_data$date))
weekend <- c("Saturday", "Sunday")
new_data <- mutate(new_data, isWeekend = is.element(new_data$weekdays, weekend))
new_data <- mutate(new_data, weekdays = as.factor(new_data$isWeekend, labels = c("weekday", "weekend")))
new_data <- select(new_data, steps:weekdays)
View(new_data)
new_data <- select(data, steps:interval)
new_data$date <- ymd(new_data$date)
new_data <- mutate(new_data, weekdays = weekdays(new_data$date))
View(new_data)
new_data <- mutate(new_data, isWeekend = is.element(new_data$weekdays, weekend))
View(new_data)
new_data <- mutate(new_data, weekdays = as.factor(new_data$isWeekend, labels = c("weekday", "weekend")))
new_data <- mutate(new_data, weekdays = as.factor(new_data$isWeekend)
new_data <- mutate(new_data, weekdays = as.factor(new_data$isWeekend))
new_data <- mutate(new_data, weekdays = factor(new_data$isWeekend, labels = c("weekday", "weekend")))
View(new_data)
View(new_data)
new_data$date <- ymd(new_data$date)
new_data <- mutate(new_data, weekdays = weekdays(new_data$date))
weekend <- c("Saturday", "Sunday")
new_data <- mutate(new_data, isWeekend = is.element(new_data$weekdays, weekend))
new_data <- mutate(new_data, weekdays = factor(new_data$isWeekend, labels = c("weekday", "weekend")))
new_data <- select(new_data, steps:weekdays)
weekday_data <- subset(new_data, weekdays == "weekday")
weekday_group_by_interval <- group_by(weekday_data, interval)
weekday_meansteps_eachinterval <- summarise(weekday_group_by_interval, mean(steps))
colnames(weekday_meansteps_eachinterval) <- c("interval", "meanSteps")
weekday_meansteps_eachinterval <- mutate(weekday_meansteps_eachinterval, weekdays = rep("weekday", nrow(weekday_meansteps_eachinterval)))
weekend_data <- subset(new_data, weekdays == "weekend")
weekend_group_by_interval <- group_by(weekend_data, interval)
weekend_meansteps_eachinterval <- summarise(weekend_group_by_interval, mean(steps))
weekend_meansteps_eachinterval <- mutate(weekend_meansteps_eachinterval, weekdays = rep("weekend", nrow(weekend_meansteps_eachinterval)))
colnames(weekend_meansteps_eachinterval) <- c("interval", "meanSteps")
View(weekend_meansteps_eachinterval)
View(weekday_meansteps_eachinterval)
weekday_data <- subset(new_data, weekdays == "weekday")
weekday_group_by_interval <- group_by(weekday_data, interval)
weekday_meansteps_eachinterval <- summarise(weekday_group_by_interval, mean(steps))
weekday_meansteps_eachinterval <- mutate(weekday_meansteps_eachinterval, weekdays = rep("weekday", nrow(weekday_meansteps_eachinterval)))
colnames(weekday_meansteps_eachinterval) <- c("interval", "meanSteps", "weekdays")
weekend_data <- subset(new_data, weekdays == "weekend")
weekend_group_by_interval <- group_by(weekend_data, interval)
weekend_meansteps_eachinterval <- summarise(weekend_group_by_interval, mean(steps))
weekend_meansteps_eachinterval <- mutate(weekend_meansteps_eachinterval, weekdays = rep("weekend", nrow(weekend_meansteps_eachinterval)))
colnames(weekend_meansteps_eachinterval) <- c("interval", "meanSteps", "weekdays")
View(weekend_meansteps_eachinterval)
View(weekday_meansteps_eachinterval)
df_final <- rbind(weekday_meansteps_eachinterval, weekend_meansteps_eachinterval)
xyplot(meanSteps ~ interval | weekdays, data = df_final, layout = c(1, 2),
type = "l", ylab = "Number of steps")
